************* Module /builds/EBC/EBC_all/github_ci/AixCaliBuHA/pylintrc
pylintrc:1:0: E0015: Unrecognized option found: no-space-check (unrecognized-option)
pylintrc:1:0: R0022: Useless option value for '--disable', 'print-statement' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'parameter-unpacking' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'unpacking-in-except' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'old-raise-syntax' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'backtick' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'import-star-module-level' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'apply-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'basestring-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'buffer-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'cmp-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'coerce-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'execfile-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'file-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'long-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'raw_input-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'reduce-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'standarderror-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'unicode-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'xrange-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'coerce-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'delslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'getslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'setslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'no-absolute-import' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'old-division' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-iter-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-view-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'next-method-called' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'metaclass-assignment' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'indexing-exception' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'raising-string' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'reload-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'oct-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'hex-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'nonzero-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'cmp-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'input-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'round-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'intern-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'unichr-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'map-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'zip-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'range-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'filter-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'using-cmp-argument' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'div-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'idiv-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'rdiv-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'exception-message-attribute' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'invalid-str-codec' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'sys-max-int' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'bad-python3-import' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'deprecated-string-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'deprecated-str-translate-call' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'deprecated-itertools-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'deprecated-types-field' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'next-method-defined' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-items-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-keys-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-values-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'long-suffix' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'old-ne-operator' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'old-octal-literal' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'non-ascii-bytes-literal' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'locally-enabled' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'eq-without-hash' (unknown-option-value)
************* Module aixcalibuha.data_types
aixcalibuha/data_types.py:709:0: C0303: Trailing whitespace (trailing-whitespace)
aixcalibuha/data_types.py:19:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
aixcalibuha/data_types.py:67:4: R0912: Too many branches (17/12) (too-many-branches)
aixcalibuha/data_types.py:506:0: R0902: Too many instance attributes (14/7) (too-many-instance-attributes)
aixcalibuha/data_types.py:547:4: R0913: Too many arguments (7/5) (too-many-arguments)
************* Module bin.guided_setup
bin/guided_setup.py:314:0: C0301: Line too long (102/100) (line-too-long)
bin/guided_setup.py:374:0: C0301: Line too long (103/100) (line-too-long)
bin/guided_setup.py:404:0: C0301: Line too long (104/100) (line-too-long)
bin/guided_setup.py:295:9: W0511: TODO: Check if this still works for new installs (fixme)
bin/guided_setup.py:34:12: W0150: break statement in finally block may swallow exception (lost-exception)
bin/guided_setup.py:72:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
bin/guided_setup.py:77:12: W0707: Consider explicitly re-raising using 'except (ValueError, KeyError) as exc' and 'raise ValueError(f'Given argument is not supported.\n{_handle_argv.__doc__}') from exc' (raise-missing-from)
bin/guided_setup.py:82:0: R0914: Too many local variables (18/15) (too-many-locals)
bin/guided_setup.py:153:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
bin/guided_setup.py:157:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
bin/guided_setup.py:159:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
bin/guided_setup.py:172:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
bin/guided_setup.py:182:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
bin/guided_setup.py:184:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
bin/guided_setup.py:186:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
bin/guided_setup.py:196:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
bin/guided_setup.py:199:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
bin/guided_setup.py:201:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
bin/guided_setup.py:210:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
bin/guided_setup.py:82:0: R0915: Too many statements (55/50) (too-many-statements)
bin/guided_setup.py:226:0: R0914: Too many local variables (43/15) (too-many-locals)
bin/guided_setup.py:232:4: W0101: Unreachable code (unreachable)
bin/guided_setup.py:255:12: R1723: Unnecessary "elif" after "break", remove the leading "el" from "elif" (no-else-break)
bin/guided_setup.py:484:11: W0718: Catching too general exception Exception (broad-exception-caught)
bin/guided_setup.py:363:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
bin/guided_setup.py:369:28: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
bin/guided_setup.py:371:33: W0212: Access to a protected member _make_modelica_normpath of a client class (protected-access)
bin/guided_setup.py:453:45: E1101: Instance of 'DymolaAPI' has no 'dymola_path' member (no-member)
bin/guided_setup.py:226:0: R0912: Too many branches (19/12) (too-many-branches)
bin/guided_setup.py:226:0: R0915: Too many statements (108/50) (too-many-statements)
************* Module bin.run_modelica_calibration
bin/run_modelica_calibration.py:34:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
bin/run_modelica_calibration.py:39:12: W0707: Consider explicitly re-raising using 'except (ValueError, KeyError) as exc' and 'raise ValueError(f'Given argument is not supported.\n{_handle_argv.__doc__}') from exc' (raise-missing-from)
bin/run_modelica_calibration.py:44:0: C0116: Missing function or method docstring (missing-function-docstring)
bin/run_modelica_calibration.py:44:0: R0914: Too many local variables (31/15) (too-many-locals)
bin/run_modelica_calibration.py:112:8: W0622: Redefining built-in 'map' (redefined-builtin)
bin/run_modelica_calibration.py:46:4: W0101: Unreachable code (unreachable)
bin/run_modelica_calibration.py:78:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
bin/run_modelica_calibration.py:80:8: W0707: Consider explicitly re-raising using 'raise KeyError(f'Given config file does not contain {value_error}. You need to specify this value in order to run the calibration.') from e' (raise-missing-from)
bin/run_modelica_calibration.py:108:14: E1101: Module 'aixcalibuha.utils.configuration' has no 'get_simulation_api_from_config' member (no-member)
bin/run_modelica_calibration.py:121:8: E1101: Module 'ebcpy.utils.conversion' has no 'convert_hdf_to_modelica_txt' member (no-member)
bin/run_modelica_calibration.py:44:0: R0915: Too many statements (59/50) (too-many-statements)
************* Module examples.e1_A_energy_system_analysis
examples/e1_A_energy_system_analysis.py:45:0: C0301: Line too long (107/100) (line-too-long)
examples/e1_A_energy_system_analysis.py:46:0: C0301: Line too long (108/100) (line-too-long)
examples/e1_A_energy_system_analysis.py:124:25: W1401: Anomalous backslash in string: '\m'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
examples/e1_A_energy_system_analysis.py:127:25: W1401: Anomalous backslash in string: '\m'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
examples/e1_A_energy_system_analysis.py:130:25: W1401: Anomalous backslash in string: '\m'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
examples/e1_A_energy_system_analysis.py:1:0: C0114: Missing module docstring (missing-module-docstring)
examples/e1_A_energy_system_analysis.py:1:0: C0103: Module name "e1_A_energy_system_analysis" doesn't conform to snake_case naming style (invalid-name)
examples/e1_A_energy_system_analysis.py:101:10: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
examples/e1_A_energy_system_analysis.py:116:10: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
examples/e1_A_energy_system_analysis.py:121:4: W0612: Unused variable 'fig' (unused-variable)
************* Module examples.e1_B_energy_system_analysis
examples/e1_B_energy_system_analysis.py:28:0: C0301: Line too long (108/100) (line-too-long)
examples/e1_B_energy_system_analysis.py:1:0: C0114: Missing module docstring (missing-module-docstring)
examples/e1_B_energy_system_analysis.py:1:0: C0103: Module name "e1_B_energy_system_analysis" doesn't conform to snake_case naming style (invalid-name)
examples/e1_B_energy_system_analysis.py:39:4: C0415: Import outside toplevel (examples.setup_fmu) (import-outside-toplevel)
examples/e1_B_energy_system_analysis.py:66:10: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
examples/e1_B_energy_system_analysis.py:69:4: W0612: Unused variable 'fig' (unused-variable)
************* Module examples.e2_A_optimization_problem_definition
examples/e2_A_optimization_problem_definition.py:1:0: C0114: Missing module docstring (missing-module-docstring)
examples/e2_A_optimization_problem_definition.py:1:0: C0103: Module name "e2_A_optimization_problem_definition" doesn't conform to snake_case naming style (invalid-name)
examples/e2_A_optimization_problem_definition.py:20:0: R0914: Too many local variables (17/15) (too-many-locals)
examples/e2_A_optimization_problem_definition.py:126:11: W0718: Catching too general exception Exception (broad-exception-caught)
examples/e2_A_optimization_problem_definition.py:136:11: W0718: Catching too general exception Exception (broad-exception-caught)
************* Module examples.e2_B_optimization_problem_definition
examples/e2_B_optimization_problem_definition.py:1:0: C0114: Missing module docstring (missing-module-docstring)
examples/e2_B_optimization_problem_definition.py:1:0: C0103: Module name "e2_B_optimization_problem_definition" doesn't conform to snake_case naming style (invalid-name)
examples/e2_B_optimization_problem_definition.py:117:11: W0718: Catching too general exception Exception (broad-exception-caught)
examples/e2_B_optimization_problem_definition.py:127:11: W0718: Catching too general exception Exception (broad-exception-caught)
************* Module examples.e3_sensitivity_analysis_example
examples/e3_sensitivity_analysis_example.py:1:0: C0114: Missing module docstring (missing-module-docstring)
examples/e3_sensitivity_analysis_example.py:41:4: W0621: Redefining name 'setup_fmu' from outer scope (line 74) (redefined-outer-name)
examples/e3_sensitivity_analysis_example.py:41:4: W0621: Redefining name 'setup_calibration_classes' from outer scope (line 74) (redefined-outer-name)
examples/e3_sensitivity_analysis_example.py:41:4: C0415: Import outside toplevel (examples.setup_fmu, examples.setup_calibration_classes) (import-outside-toplevel)
examples/e3_sensitivity_analysis_example.py:74:4: W0611: Unused setup_fmu imported from examples (unused-import)
examples/e3_sensitivity_analysis_example.py:74:4: W0611: Unused setup_calibration_classes imported from examples (unused-import)
************* Module examples.e4_calibration_example
examples/e4_calibration_example.py:101:0: C0301: Line too long (108/100) (line-too-long)
examples/e4_calibration_example.py:1:0: C0114: Missing module docstring (missing-module-docstring)
examples/e4_calibration_example.py:12:0: R0913: Too many arguments (7/5) (too-many-arguments)
examples/e4_calibration_example.py:12:0: R0914: Too many local variables (20/15) (too-many-locals)
examples/e4_calibration_example.py:51:4: C0415: Import outside toplevel (examples.setup_fmu, examples.setup_calibration_classes) (import-outside-toplevel)
************* Module examples.e5_automated_process
examples/e5_automated_process.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module tests.test_data_types
tests/test_data_types.py:89:17: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
************* Module tests.test_modelica_cal_sen
tests/test_modelica_cal_sen.py:1:0: R0801: Similar lines in 2 files
==bin.guided_setup:[64:102]
==bin.run_modelica_calibration:[26:44]
    __supported_argv = ["--config"]
    # Path to the script is irrelevant
    resulting_setting = {}
    _rel_argv = argv[1:]
    for arg in _rel_argv:
        try:
            name, value = arg.split("=")
            if name not in __supported_argv:
                raise KeyError
            else:
                resulting_setting[name] = value
        except (ValueError, KeyError):
            raise ValueError(f"Given argument is not supported.\n{_handle_argv.__doc__}")

    return resulting_setting


def main(): (duplicate-code)
tests/test_modelica_cal_sen.py:1:0: R0801: Similar lines in 2 files
==examples.e2_A_optimization_problem_definition:[122:131]
==examples.e2_B_optimization_problem_definition:[113:122]
                                     index=new_index)
    try:
        goals.set_sim_target_data(sim_target_data)
    except Exception as err:
        print("I knew this error was going to happen. Do you understand "
              "why this happens based on the following message?")
        print(err)
    new_index = meas_target_data.index.values.copy()
    new_index[-10] += 0.05  # Change some value (duplicate-code)
tests/test_modelica_cal_sen.py:1:0: R0801: Similar lines in 2 files
==examples.e2_A_optimization_problem_definition:[92:110]
==examples.e2_B_optimization_problem_definition:[82:100]
    }
    # To match the measured data to simulated data,
    # the index has to match with the simulation output
    # Thus, convert it:
    meas_target_data.to_float_index()
    # Lastly, setup the goals object. Note that the statistical_measure
    # is parameter of the python version of this example. It's a metric to
    # compare two set's of time series data. Which one to choose is up to
    # your expert knowledge. If you have no clue, raise an issue or read
    # basic literature on calibration.
    goals = Goals(
        meas_target_data=meas_target_data,
        variable_names=variable_names,
        statistical_measure=statistical_measure,
        weightings=[0.7, 0.3]
    )
    # Let's check if our evaluation is possible by creating some
    # dummy `sim_target_data` with the same index: (duplicate-code)
tests/test_modelica_cal_sen.py:1:0: R0801: Similar lines in 2 files
==examples.e2_A_optimization_problem_definition:[213:222]
==examples.e2_B_optimization_problem_definition:[188:197]
    )
    return calibration_classes, validation_class


if __name__ == '__main__':
    main(
        examples_dir=pathlib.Path(__file__).parent,
        multiple_classes=True
    ) (duplicate-code)
tests/test_modelica_cal_sen.py:1:0: R0801: Similar lines in 2 files
==examples.e2_A_optimization_problem_definition:[197:207]
==examples.e2_B_optimization_problem_definition:[173:183]
    print([c.name for c in calibration_classes])
    calibration_classes_merged = merge_calibration_classes(calibration_classes)
    print([c.name for c in calibration_classes_merged])
    # Don't worry, the relevant_time_interval object keeps track
    # of which time intervals are relevant for the objective calculation
    print("Relevant time interval for class",
          calibration_classes_merged[0].name,
          calibration_classes_merged[0].relevant_intervals)
    # Let's also create an object to later validate our calibration:
    validation_class = CalibrationClass( (duplicate-code)
tests/test_modelica_cal_sen.py:1:0: R0801: Similar lines in 2 files
==examples.e2_A_optimization_problem_definition:[132:158]
==examples.e2_B_optimization_problem_definition:[113:120]
                                     index=new_index)
    try:
        goals.set_sim_target_data(sim_target_data)
    except Exception as err:
        print("I knew this error was going to happen. Do you understand "
              "why this happens based on the following message?")
        print(err)

    # ## Calibration Classes
    # We now are going to wrap everything up into a single object called
    # `CalibrationClass`.
    # Each class has a `name`, a `start_time`, `stop_time` and
    # `goals`, `tuner_paras` (tuner parameters) and `inputs`.
    # The latter three can be set for all
    # classes if a distinction is not required.
    # ### Why do we use a `CalibrationClass`?
    # Because this class contains all information necessary
    # to perform both sensitivity analysis and calibration automatically.
    # ### Can there be multiple classes?
    # Yes! Because we expect different tuner parameters
    # to influence the outputs based on the state of the system,
    # e.g. 'On' and 'Off' more or less. To reduce the complexity of the
    # optimization problem, separating tuner parameters into time intervals
    # can be handy. For example heat losses to the ambient may be most
    # sensitive if the device is just turned off, while efficiency is more
    # sensitive during runtime. (duplicate-code)
tests/test_modelica_cal_sen.py:1:0: R0801: Similar lines in 2 files
==examples.e2_A_optimization_problem_definition:[122:129]
==examples.e2_B_optimization_problem_definition:[123:149]
                                     index=new_index)
    try:
        goals.set_sim_target_data(sim_target_data)
    except Exception as err:
        print("I knew this error was going to happen. Do you understand "
              "why this happens based on the following message?")
        print(err) (duplicate-code)
tests/test_modelica_cal_sen.py:1:0: R0801: Similar lines in 2 files
==examples.e2_A_optimization_problem_definition:[111:120]
==examples.e2_B_optimization_problem_definition:[101:111]
                                     index=meas_target_data.index)

    print("Goals data before setting simulation data:\n", goals.get_goals_data())
    goals.set_sim_target_data(sim_target_data)
    print("Goals data after setting simulation data:\n", goals.get_goals_data())
    print(statistical_measure, "of goals: ", goals.eval_difference())
    print("Verbose information on calculation", goals.eval_difference(verbose=True))
    # Lastly we advice to play around with the index of the sim_target_data to
    # understand the error messages of this framework a little bit better.
    # Example: (duplicate-code)
tests/test_modelica_cal_sen.py:1:0: R0801: Similar lines in 2 files
==examples.e2_A_optimization_problem_definition:[70:84]
==examples.e2_B_optimization_problem_definition:[57:73]
    )
    print(tuner_paras)
    print("Names of parameters", tuner_paras.get_names())
    print("Initial values", tuner_paras.get_initial_values())
    # Scaling (will be done internally)
    print("Scaled initial values:\n", tuner_paras.scale(tuner_paras.get_initial_values()))

    # ## Goals
    # The evaluation of your goals (or mathematically speaking 'objective function')
    # depends on the difference of measured to simulated data.
    # Thus, you need to specify both measured and simulated data.
    #
    # Start by loading the measured data generated in 1_A_energy_system_analysis.py:
    data_dir = pathlib.Path(examples_dir).joinpath("data") (duplicate-code)
tests/test_modelica_cal_sen.py:1:0: R0801: Similar lines in 2 files
==examples.e2_A_optimization_problem_definition:[10:58]
==examples.e2_B_optimization_problem_definition:[10:53]
import pathlib
# Imports from ebcpy
from ebcpy import TimeSeriesData
# Imports from AixCaliBUhA
from aixcalibuha import TunerParas, Goals, \
    CalibrationClass
from aixcalibuha.data_types import merge_calibration_classes


def main(
        examples_dir,
        statistical_measure="NRMSE",
        multiple_classes=True
):
    """
    Arguments of this example:

    :param [pathlib.Path, str] examples_dir:
        Path to the examples folder of AixCaliBuHA
    :param str statistical_measure:
        Measure to calculate the scalar of the objective,
        One of the supported methods in
        ebcpy.utils.statistics_analyzer.StatisticsAnalyzer
        e.g. RMSE, MAE, NRMSE
    :param bool multiple_classes:
        If False, all CalibrationClasses will have the
        same name
    """
    # ## Tuner Parameters
    # Tuner parameters are the optimization variables we will be
    # changing to match the simulated onto the measured output.
    #
    # As described in the first example (e1_B_energy_system_analysis),
    # we've changed two parameters in the model.
    # To define tuner parameters, you have to specify
    # - the name of the parameter
    # - an initial guess
    # - boundaries as a (min, max) tuple.
    # Note that the initial guess is not always used by optimization routines.
    # We've chosen to make it a requirement to prevent blindly accepting
    # calibration results. If the result is very far away from your initial guess
    # and you though you understand the model, maybe the parameter is just not
    # sensitive or influenced by another parameter. (duplicate-code)

-----------------------------------
Your code has been rated at 8.92/10

